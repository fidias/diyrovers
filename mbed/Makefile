# This file was automagically generated by mbed.org. For more information, 
# see http://mbed.org/handbook/Exporting-to-CodeSourcery

TARGET=TARGET_NXP/TARGET_LPC176X
TOOLCHAIN=TOOLCHAIN_GCC_CS

GCC_BIN = 
PROJECT = libmbed
OBJECTS=./common/board.o ./common/exit.o ./common/mbed_interface.o ./common/pinmap_common.o ./common/rtc_time.o ./common/semihost_api.o ./common/us_ticker_api.o ./common/wait_api.o ./common/BusIn.o ./common/BusInOut.o ./common/BusOut.o ./common/CAN.o ./common/CallChain.o ./common/Ethernet.o ./common/FileBase.o ./common/FileLike.o ./common/FilePath.o ./common/FileSystemLike.o ./common/FunctionPointer.o ./common/I2C.o ./common/I2CSlave.o ./common/InterruptIn.o ./common/InterruptManager.o ./common/LocalFileSystem.o ./common/RawSerial.o ./common/SPI.o ./common/SPISlave.o ./common/Serial.o ./common/SerialBase.o ./common/Stream.o ./common/Ticker.o ./common/Timeout.o ./common/Timer.o ./common/TimerEvent.o ./common/retarget.o
OBJECTS += ./targets/cmsis/$(TARGET)/$(TOOLCHAIN)/sys.o ./targets/cmsis/$(TARGET)/$(TOOLCHAIN)/startup_LPC17xx.o ./targets/cmsis/$(TARGET)/cmsis_nvic.o ./targets/cmsis/$(TARGET)/system_LPC17xx.o ./targets/hal/$(TARGET)/analogin_api.o ./targets/hal/$(TARGET)/analogout_api.o ./targets/hal/$(TARGET)/can_api.o ./targets/hal/$(TARGET)/ethernet_api.o ./targets/hal/$(TARGET)/gpio_api.o ./targets/hal/$(TARGET)/gpio_irq_api.o ./targets/hal/$(TARGET)/i2c_api.o ./targets/hal/$(TARGET)/pinmap.o ./targets/hal/$(TARGET)/port_api.o ./targets/hal/$(TARGET)/pwmout_api.o ./targets/hal/$(TARGET)/rtc_api.o ./targets/hal/$(TARGET)/serial_api.o ./targets/hal/$(TARGET)/sleep.o ./targets/hal/$(TARGET)/spi_api.o ./targets/hal/$(TARGET)/us_ticker.o
INCLUDE_PATHS = -I. -I./api -I./hal -I./targets/cmsis -I./targets/cmsis/$(TARGET) -I./targets/hal/$(TARGET)
LIBRARY_PATHS =  
LIBRARIES =  
LINKER_SCRIPT = ./targets/cmsis/$(TARGET)/$(TOOLCHAIN)/LPC1768.ld

############################################################################### 
CC = $(GCC_BIN)arm-none-eabi-gcc
CPP = $(GCC_BIN)arm-none-eabi-g++
CC_FLAGS = -c -ggdb -Os -fno-common -fmessage-length=0 -Wall -fno-exceptions -mcpu=cortex-m3 -mthumb -ffunction-sections -fdata-sections -mtpcs-leaf-frame -mfix-cortex-m3-ldrd --specs=nano.specs
ONLY_C_FLAGS = -std=gnu99
ONLY_CPP_FLAGS = -std=gnu++98
CC_SYMBOLS = -DTARGET_LPC1768 -DTARGET_M3 -DTARGET_NXP -DTARGET_LPC176X -DTOOLCHAIN_GCC_CS -DTOOLCHAIN_GCC -D__CORTEX_M3 -DARM_MATH_CM3 

AR = ar
AS = $(GCC_BIN)arm-none-eabi-gcc

LD = $(GCC_BIN)arm-none-eabi-gcc
LD_FLAGS = -mcpu=cortex-m3 -mthumb -Wl,--gc-sections
LD_SYS_LIBS = -lstdc++ -lsupc++ -lm -lc -lgcc

OBJCOPY = $(GCC_BIN)arm-none-eabi-objcopy

SIZE = $(GCC_BIN)arm-none-eabi-size

all: $(PROJECT).a
	
clean:
	rm -f $(PROJECT).a $(PROJECT).elf $(OBJECTS)

.s.o:
	$(AS)  $(CC_FLAGS) $(CC_SYMBOLS) -o $@ $<

.c.o:
	$(CC)  $(CC_FLAGS) $(CC_SYMBOLS) $(ONLY_C_FLAGS)   $(INCLUDE_PATHS) -o $@ $<

.cpp.o:
	$(CPP) $(CC_FLAGS) $(CC_SYMBOLS) $(ONLY_CPP_FLAGS) $(INCLUDE_PATHS) -o $@ $<

$(PROJECT).a: $(OBJECTS)
	$(AR) rcs $@ $(OBJECTS)
